https://leetcode.com/problems/continuous-subarray-sum/description/?envType=daily-question&envId=2024-06-08

class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) {
        unordered_map<int, int> mp;
        int n = nums.size();
        int sum=0;
        mp[0]=-1;
        for(int i=0;i<n;i++){
            sum+=nums[i];
            int r = sum%k;

            if(mp.find(r) !=mp.end()){
                if(i-mp[r]>=2){
                    return true;
                }
            }
            else{
                    mp[r]=i;
            }
        }
            return false;
        
    }
    
};
